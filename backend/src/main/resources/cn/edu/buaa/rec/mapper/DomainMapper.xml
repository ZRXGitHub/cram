<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.buaa.rec.dao.DomainMapper">
  <resultMap id="BaseResultMap" type="cn.edu.buaa.rec.model.Domain">

    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="build_time" jdbcType="TIMESTAMP" property="buildTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="use_state" jdbcType="VARCHAR" property="useState" />
    <result column="isApproved" jdbcType="INTEGER" property="isapproved" />
    <result column="typical_data" jdbcType="LONGVARCHAR" property="typicalData" />
    <result column="typical_role" jdbcType="LONGVARCHAR" property="typicalRole" />
    <result column="typical_scenario" jdbcType="LONGVARCHAR" property="typicalScenario" />

  </resultMap>
  <insert id="insert" parameterType="cn.edu.buaa.rec.model.Domain">
    insert into domain (id, name, description, creator_id,
      build_time, update_time, use_state, 
      isApproved, typical_data, typical_role, typical_scenario)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}, #{creatorId,jdbcType=BIGINT},
      #{buildTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{useState,jdbcType=VARCHAR}, 
      #{isapproved,jdbcType=INTEGER}, #{typicalData,jdbcType=LONGVARCHAR}, #{typicalRole,jdbcType=LONGVARCHAR}, #{typicalScenario,jdbcType=LONGVARCHAR})
  </insert>

  <!-- 查找现有领域 -->
  <select id="selectDomain" resultMap="BaseResultMap">
    SELECT *
    FROM Domain
  </select>

  <select id="selectByName" parameterType="String" resultMap="BaseResultMap">
    SELECT *
    FROM domain
    WHERE NAME = #{name}
    LIMIT 1
  </select>

  <select id="selectNameById" parameterType="Long" resultType="String">
    SELECT name
    FROM domain
    WHERE id = #{id}
  </select>

  <!-- 查找现有记录的最大id -->
  <!-- max后面不能有空格 -->
  <select id="selectMaxId" resultType="Long">
    SELECT max(id)
    FROM domain
  </select>
</mapper>