<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.buaa.rec.dao.DataMapper">
    <resultMap id="BaseResultMap" type="cn.edu.buaa.rec.model.Data">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Feb 28 00:40:34 CST 2018.
        -->
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="build_time" jdbcType="TIMESTAMP" property="buildTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="creator_id" jdbcType="BIGINT" property="creatorId"/>
        <result column="project_id" jdbcType="BIGINT" property="projectId"/>
        <result column="use_state" jdbcType="VARCHAR" property="useState"/>
        <result column="description" jdbcType="LONGVARCHAR" property="description"/>
    </resultMap>

    <insert id="insert" parameterType="cn.edu.buaa.rec.model.Data">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Feb 28 00:40:34 CST 2018.
        -->
        insert into data (id, name, build_time,
        update_time, creator_id, project_id,
        use_state, description)
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{buildTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT},
        #{useState,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR})
    </insert>
    <select id="selectByProjectId" parameterType="Long" resultMap="BaseResultMap">
    SELECT *
    FROM DATA
    where project_id=#{id}
  </select>

    <select id="selectById" parameterType="Long" resultType="cn.edu.buaa.rec.model.Data">
    SELECT *
    FROM DATA
    where id=#{id}
  </select>

    <select id="selectByProjectIdAndUserId" resultMap="BaseResultMap">
    SELECT *
    FROM DATA
    where project_id=#{projectId} AND creator_id=#{userId}
  </select>
    <!-- 查找现有记录的最大id -->
    <!-- max后面不能有空格 -->
    <select id="selectMaxId" resultType="Long">
        SELECT max(id)
        FROM data
    </select>

    <!-- 根据dataName 和 projectId，查找该项目数据是否存在 -->
    <select id="checkByNameAndProjectId"  resultType="Integer">
        SELECT count(*)
        FROM data
        WHERE name = #{name} AND project_id = #{projectId}
    </select>

    <!--通过name查找id，返回List<Long>-->
    <select id="selectIdsByName"  resultType="Long">
        SELECT id
        from data
        where project_Id=#{projectId} And name IN
        <foreach collection="dataNames" item="_name" index="index" open="(" close=")"
                 separator=",">
            #{_name}
        </foreach>
    </select>

</mapper>